name: Build N1 70+o and 70+
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      days:
        description: 'Number of days.'
        required: true
        default: 60
      minimum_runs:
        description: 'The minimum runs to keep for each workflow.'
        required: true
        default: 24
  schedule:
    - cron: 30 23 * * *      
env:
  UPLOAD_COWTRANSFER: false
  RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build for ${{ matrix.flippy_name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - flippy_name: 70+o
            release_name: N1-wangxiaofeng-70+o.img
          - flippy_name: 70+
            release_name: N1-wangxiaofeng-70+.img

    env:
      FLIPPY_NAME: ${{ matrix.flippy_name }}   
      RELEASE_NAME: ${{ matrix.release_name }}
    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Initialization environment
      run: |     
        version=$(curl -s "https://api.github.com/repos/wxfyes/N1openwrt/releases/latest" | awk -F '"' '/tag_name/{print $4}')
        
        echo "version=$version"  >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")"  >> $GITHUB_ENV
        
        sudo chmod  -R 777 /opt
        cp -r ${FLIPPY_NAME}/opt/* /opt
                
    - name: Download
      run: |
        cd /opt/kernel
        
        wget  https://github.com/xianli789/Actions-OpenWrt-x86/releases/tag/2022.02.19-1557/download/$version/openwrt-armvirt-64-default-rootfs.tar.gz
                
    - name: Check Files
      run: |
        cd /opt/kernel
        ls
                
    - name: Install the package
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install xz-utils btrfs-progs gawk zip unzip curl dosfstools  uuid-runtime
        sudo -E apt-get -qq install git  git-core
        sudo -E apt-get -qq install pigz
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    
    - name: build img
      run: |
        sudo chmod  -R 777 /opt
        cd /opt/kernel
        sudo chmod +x *.sh
        sudo ./mk_s905d_n1.sh && sudo chown $USER:$USER -R files/
        
    
